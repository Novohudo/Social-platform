{"version":3,"file":"static/js/431.be36c44b.chunk.js","mappings":"kJACA,MAAyB,wBAAzB,EAA2D,yBAA3D,EAA6F,wBAA7F,EAAsI,gCAAtI,EAAiL,0BAAjL,EAAqN,yBAArN,EAA8P,+B,mBCU9P,EAPmB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KACvBC,EAAO,YAD+B,EAATC,GAEjC,OACC,UAAC,KAAD,CAASC,GAAIF,EAAMG,UAAW,qBAAGC,SAA2BC,EAAW,IAAvE,WAA4E,gBAAKC,IAAKR,EAAMS,IAAI,MAAOR,MCMzG,EATgB,SAAC,GAAiB,IAAfS,EAAc,EAAdA,QAClB,OACC,gBAAKL,UAAWE,EAAhB,SAA4BG,K,iDCDxBC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAlBuB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,OACC,iBAAMC,SAAUD,EAAhB,UACC,4BACC,SAACE,EAAA,EAAD,CACCC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUV,GACrBV,KAAK,iBACLqB,YAAY,wBAEb,oBACA,0BACC,mBAAQjB,UAAWE,EAAnB,4BCkBL,EA/BgB,SAAC,GAAwC,IAAtCgB,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,kBAC3BC,EAAkBF,EAAYG,YAAYC,KAAI,SAACC,GAAD,OACjD,SAAC,EAAD,CACC5B,KAAM4B,EAAOC,IACb5B,KAAM2B,EAAO3B,KACbE,GAAIyB,EAAOzB,IACNyB,EAAOzB,OAEV2B,EAAkBP,EAAYQ,aAAaJ,KAAI,SAACK,GAAD,OAClD,SAAC,EAAD,CAAStB,QAASsB,EAAKtB,QAASP,GAAI6B,EAAK7B,GAAI0B,IAAKG,EAAKH,KAAUG,EAAK7B,OAOvE,OAEC,iBAAKE,UAAWE,EAAhB,WACC,gBAAKF,UAAWE,EAAhB,UACC,gBAAKF,UAAWE,EAAhB,SAA2BkB,OAG5B,iBAAKpB,UAAWE,EAAhB,UACEuB,GACD,SAAC,EAAD,CAAgBd,SAbC,SAACiB,GACpBT,EAAkBS,EAAOC,0B,6BCG3B,GAAeC,E,QAAAA,KACdC,EAAAA,EAAAA,KAjBuB,SAACC,GACxB,MAAO,CACNd,YAAac,EAAMd,YACnBW,eAAgBG,EAAMd,YAAYW,mBAGT,SAACI,GAC3B,MAAO,CACNd,kBAAmB,SAACU,GACnBI,GAASC,EAAAA,EAAAA,GAAyBL,SASpCM,EAAAA,EAFD,CAGEC,I,+ICrBEC,EAA6B,SAACL,GAAD,MAAY,CAC3CM,OAAON,EAAMO,KAAKD,SAGPH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAIC,KAAKC,MAAML,QACR,SAACE,GAAD,UAAeE,KAAKC,SADE,SAAC,KAAD,CAAU5C,GAAI,eAHF,GACb6C,EAAAA,WAShC,OAFqCb,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogItem.jsx","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"active\":\"Dialogs_active__iwnYj\",\"dialogs\":\"Dialogs_dialogs__xXgjx\",\"dialog\":\"Dialogs_dialog__jb-MP\",\"dialogs__items\":\"Dialogs_dialogs__items__hppsB\",\"messages\":\"Dialogs_messages__ptNzh\",\"message\":\"Dialogs_message__a+tCC\",\"dialogsButton\":\"Dialogs_dialogsButton__9BL33\"};","import s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = ({ icon, name, id }) => {\r\n let path = \"/Dialogs/\" + id;\r\n return (\r\n  <NavLink to={path} className={({ isActive }) => (isActive ? s.active : \"\")}><img src={icon} alt=\"#\" />{name}</NavLink>\r\n );\r\n};\r\n\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\n\r\n//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n//Основа Сообщений\r\nconst Message = ({ message }) => {\r\n return (\r\n  <div className={s.message}>{message}</div>\r\n );\r\n};\r\n//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n//===========================================================================\r\n\r\n\r\nexport default Message;","import { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utilites/validators\";\r\nimport s from \"../Dialogs.module.css\"\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = ({ handleSubmit }) => {\r\n return (\r\n  <form onSubmit={handleSubmit}>\r\n   <div>\r\n    <Field\r\n     component={TextArea}\r\n     validate={[required, maxLength50]}\r\n     name=\"newMessageBody\"\r\n     placeholder=\"Enter your message\"\r\n    />\r\n    <div />\r\n    <div>\r\n     <button className={s.dialogsButton}>Post</button>\r\n    </div>\r\n   </div>\r\n  </form>\r\n );\r\n};\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(\r\n AddMessageForm\r\n);\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogsItem/DialogItem\";\r\nimport Message from \"./Message/MessageItem\";\r\nimport React from \"react\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = ({ dialogsPage, messagePostAction }) => {\r\n let dialogsElements = dialogsPage.dialogsData.map((dialog) => (\r\n  <DialogItem\r\n   icon={dialog.img}\r\n   name={dialog.name}\r\n   id={dialog.id}\r\n   key={dialog.id}\r\n  />));\r\n let messageElements = dialogsPage.messagesData.map((data) => (\r\n  <Message message={data.message} id={data.id} img={data.img} key={data.id} />));\r\n\r\n //==================================================================\r\n let addNewMessage = (values) => {\r\n  messagePostAction(values.newMessageBody);\r\n };\r\n\r\n return (\r\n\r\n  <div className={s.dialogs}>\r\n   <div className={s.dialogs__items}>\r\n    <div className={s.dialog}>{dialogsElements}</div>\r\n   </div>\r\n\r\n   <div className={s.messages}>\r\n    {messageElements}\r\n    <AddMessageForm onSubmit={addNewMessage} />\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { messagePostActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n return {\r\n  dialogsPage: state.dialogsPage,\r\n  newMessageBody: state.dialogsPage.newMessageBody\r\n };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n return {\r\n  messagePostAction: (newMessageBody) => {\r\n   dispatch(messagePostActionCreator(newMessageBody));\r\n  }\r\n };\r\n};\r\n\r\n//?====================== HOC и функция Compose =============================\r\n//?........................................................\r\nexport default compose(\r\n connect(mapStateToProps, mapDispatchToProps),\r\n withAuthRedirect\r\n)(Dialogs);\r\n\r\n//?=======================================================\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth)return <Navigate to ='/login'/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  \r\n  return ConnectedAuthRedirectComponent;\r\n}"],"names":["icon","name","path","id","to","className","isActive","s","src","alt","message","maxLength50","maxLengthCreator","reduxForm","form","handleSubmit","onSubmit","Field","component","TextArea","validate","required","placeholder","dialogsPage","messagePostAction","dialogsElements","dialogsData","map","dialog","img","messageElements","messagesData","data","values","newMessageBody","compose","connect","state","dispatch","messagePostActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","props","React"],"sourceRoot":""}